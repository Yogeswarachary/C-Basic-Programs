Eg program for exams:-

//here is the problem statement//

*for her nest karake demonstration, ADA will break some bricks

* ADA stacked three bricks on top of each other, Initially ,their widths(from top to bottom)
are W1,W2,W3.

*ADA'S sttrength is S. whenever she hits a stack of bricks, consider the largest
k>= 0 such that the sum of widths of the top most k bricks does not exceed S; the
top most k bricks break and are removed from stack. Before each hit, ADA may 
also decide to reverse the current stack of bricks, with no cost.

* find the minimum number of hits Ada needs in order to break all aricks 
if she performs the reversals optimally. You are not required to minimise the number of reversals.

//Input//
* The first line of the input conatins a single integer T denoiting the number of test cases. 
the description of T test cases follows.

* The first and only line of each test case contains four space-separated integers S,W1,W2,W3.

//Output//
for each test case, print a single line containing one integer - the minimum required number of hits

CONSTRAINTS:-
* 1<=T<=64
*1<=S<=8
*1<=Wi<=2 for each valid i value
*it is guaranteed that ADA can break all bricks

SUB TASKS:-
subtask #1.W1=W2=W3
SUBTASK #2.original constraints

Example Input:-
3
3 1 2 2
2 1 1 1
3 2 2 1

Example Output:-
2
2
2

Here is the Program for above proble statement
#Program

#include<iostream>
uisng namespace std;

int main()
{
int t;
cin>>t;

while(t--)
{
int s,w1,w2,w3;
cin>>s>>w1>>w2>>w3;

int sum=w1+w2+w3;
if(s>=sum)
cout<<"1"<<endl;

else
{
int sum1=w1+w2;
int sum2=w2+w3;

if(sum1<=s || sum2<=s)
cout<<"2"<<endl;
else
cout<<"3"<<endl;
}
}
return 0;
}
